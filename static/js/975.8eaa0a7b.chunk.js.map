{"version":3,"file":"static/js/975.8eaa0a7b.chunk.js","mappings":"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","sources":["components/ShoppingForm/ShoppingForm.styled.js","components/ShoppingForm/index.jsx","components/ShoppingItem/ShoppingCartItem.styled.js","components/ShoppingItem/ShoppingCartItem.jsx","components/ShoppingItem/ShoppingItem.jsx","components/ShoppingList/ShoppingList.styled.js","components/ShoppingList/index.jsx","pages/ShoppingCartPage.styled.js","pages/ShoppingCartPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 40vw;\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 10px;\r\n`;\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: 1px solid LIGHTGRAY;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n`;\r\nexport const Button = styled.button`\r\n  width: 150px;\r\n  padding: 8px;\r\n  outline: 1px solid lightgray;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  &:hover {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n    outline: transparent;\r\n  }\r\n`;\r\nexport const Span = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { createOrder } from \"../../utility/pharmacyApi\";\r\nimport { ShoppingCartContext } from \"../../utility/context\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Span,\r\n} from \"./ShoppingForm.styled\";\r\n\r\nconst ShoppingForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const { shoppingCarts, setShoppingCart } = useContext(ShoppingCartContext);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const total = shoppingCarts.reduce(\r\n      (acc, item) => acc + item.price * item.count,\r\n      0\r\n    );\r\n    setTotalPrice(total);\r\n  }, [shoppingCarts]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createOrder({ ...formData, order: shoppingCarts }).then((data) => {\r\n      alert(data.data.message);\r\n    });\r\n    setFormData({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n    });\r\n    setShoppingCart([]);\r\n    localStorage.setItem(\"shoppingCarts\", \"[]\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name:</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n          pattern=\"[A-ZА-ЯЁҐІЇЄ][a-zA-Zа-яёґіїє]{1,}\" // Оновлений регулярний вираз\r\n          title=\"Please enter at least 2 characters with the first one in uppercase\" // Повідомлення про помилку\r\n        />\r\n\r\n        <Label htmlFor=\"email\">Email:</Label>\r\n        <Input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <Label htmlFor=\"phone\">Phone:</Label>\r\n        <Input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n          required\r\n          pattern=\"[0-9]{10}\"\r\n          title=\"Please enter a 10-digit phone number\"\r\n        />\r\n\r\n        <Label htmlFor=\"address\">Address:</Label>\r\n        <Input\r\n          id=\"address\"\r\n          name=\"address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n          required\r\n        ></Input>\r\n\r\n        <Box>\r\n          <Button type=\"submit\">Submit</Button>\r\n          <Span>Total price: {totalPrice}</Span>\r\n        </Box>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShoppingForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Item = styled.li`\r\n  border: 1px solid lightgray;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\nexport const Box = styled.div`\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\nexport const Img = styled.img`\r\n  height: 250px;\r\n`;\r\nexport const Title = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nexport const Price = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: 1px solid LIGHTGRAY;\r\n`;\r\nexport const Button = styled.button`\r\n  width: 100px;\r\n  padding: 8px;\r\n  border: 1px solid lightgray;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  &:hover {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n    border: transparent;\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Img,\r\n  Input,\r\n  Item,\r\n  Price,\r\n  Title,\r\n} from \"./ShoppingCartItem.styled\";\r\n\r\nconst ShoppingCartItem = ({\r\n  avatar,\r\n  title,\r\n  price,\r\n  id,\r\n  setShoppingCart,\r\n  shoppingCarts,\r\n}) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const storedCarts = JSON.parse(localStorage.getItem(\"shoppingCarts\"));\r\n    if (storedCarts) {\r\n      const storedQuantity = storedCarts.find((cart) => cart.id === id)?.count;\r\n      if (storedQuantity) {\r\n        setQuantity(storedQuantity);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value);\r\n    if (!isNaN(newQuantity) && newQuantity > 0) {\r\n      const updatedCarts = shoppingCarts.map((cart) => {\r\n        if (cart.id === id) {\r\n          return { ...cart, count: newQuantity };\r\n        } else {\r\n          return cart;\r\n        }\r\n      });\r\n      setShoppingCart(updatedCarts);\r\n      setQuantity(newQuantity);\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    const removedData = shoppingCarts.filter((el) => el.id !== +id);\r\n    setShoppingCart(removedData);\r\n  };\r\n\r\n  return (\r\n    <Item>\r\n      <Img src={avatar} alt=\"medicament\" />\r\n      <Box>\r\n        <Title>{title}</Title>\r\n        <Price>Price: {price}</Price>\r\n        <Input\r\n          type=\"number\"\r\n          value={quantity}\r\n          onChange={handleQuantityChange}\r\n          min=\"1\"\r\n        />\r\n        <Button type=\"button\" onClick={handleRemove}>\r\n          Remove\r\n        </Button>\r\n      </Box>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartItem;\r\n","import ShoppingCartItem from \"./ShoppingCartItem\";\r\n\r\nconst ShoppingItem = ({ shoppingCarts, setShoppingCart }) => {\r\n  return (\r\n    <>\r\n      {shoppingCarts?.length > 0 &&\r\n        shoppingCarts.map(({ avatar, title, price, id }) => (\r\n          <ShoppingCartItem\r\n            key={id}\r\n            avatar={avatar}\r\n            title={title}\r\n            price={price}\r\n            id={id}\r\n            setShoppingCart={setShoppingCart}\r\n            shoppingCarts={shoppingCarts}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShoppingItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 300px);\r\n  gap: 20px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport ShoppingItem from \"../ShoppingItem/ShoppingItem\";\r\nimport { ShoppingCartContext } from \"../../utility/context\";\r\nimport { List } from \"./ShoppingList.styled\";\r\n\r\nconst ShoppingList = () => {\r\n  const { shoppingCarts, setShoppingCart } = useContext(ShoppingCartContext);\r\n\r\n  return (\r\n    <List>\r\n      <ShoppingItem\r\n        shoppingCarts={shoppingCarts}\r\n        setShoppingCart={setShoppingCart}\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\nexport const Box = styled.div`\r\n  height: 81.3vh;\r\n  position: sticky;\r\n  overflow-y: auto;\r\n  width: 60vw;\r\n`;\r\n","import ShoppingForm from \"../components/ShoppingForm\";\r\nimport ShoppingList from \"../components/ShoppingList\";\r\nimport { Box, Section } from \"./ShoppingCartPage.styled\";\r\n\r\nconst ShoppingCartPage = () => {\r\n  return (\r\n    <Section>\r\n      <ShoppingForm />\r\n      <Box>\r\n        <ShoppingList />\r\n      </Box>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartPage;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","Box","_templateObject5","Button","button","_templateObject6","Span","span","_templateObject7","ShoppingForm","formData","setFormData","useState","name","email","phone","address","shoppingCarts","setShoppingCart","useContext","ShoppingCartContext","totalPrice","setTotalPrice","useEffect","total","reduce","acc","item","price","count","handleChange","e","target","value","_jsx","children","_jsxs","onSubmit","preventDefault","createOrder","order","then","data","alert","message","localStorage","setItem","htmlFor","type","id","onChange","required","pattern","title","Item","li","Img","img","Title","h3","Price","_ref","avatar","quantity","setQuantity","storedCarts","JSON","parse","getItem","_storedCarts$find","storedQuantity","find","cart","src","alt","newQuantity","parseInt","isNaN","updatedCarts","map","min","onClick","handleRemove","removedData","filter","el","_Fragment","length","_ref2","ShoppingCartItem","List","ul","ShoppingList","ShoppingItem","Section","section","ShoppingCartPage"],"sourceRoot":""}