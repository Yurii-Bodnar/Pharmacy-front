{"version":3,"file":"static/js/975.3aa16556.chunk.js","mappings":"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","sources":["components/ShoppingForm/ShoppingForm.styled.js","components/ShoppingForm/index.jsx","components/ShoppingItem/ShoppingCartItem.styled.js","components/ShoppingItem/ShoppingCartItem.jsx","components/ShoppingItem/ShoppingItem.jsx","components/ShoppingList/ShoppingList.styled.js","components/ShoppingList/index.jsx","pages/ShoppingCartPage.styled.js","pages/ShoppingCartPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 40vw;\r\n`;\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 10px;\r\n`;\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: 1px solid LIGHTGRAY;\r\n`;\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n`;\r\nexport const Button = styled.button`\r\n  width: 150px;\r\n  padding: 8px;\r\n  outline: 1px solid lightgray;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  &:hover {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n    outline: transparent;\r\n  }\r\n`;\r\nexport const Span = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { createOrder } from \"../../utility/pharmacyApi\";\r\nimport { ShoppingCartContext } from \"../../utility/context\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Span,\r\n} from \"./ShoppingForm.styled\";\r\n\r\nconst ShoppingForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const { shoppingCarts } = useContext(ShoppingCartContext);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const total = shoppingCarts.reduce(\r\n      (acc, item) => acc + item.price * item.count,\r\n      0\r\n    );\r\n    setTotalPrice(total);\r\n  }, [shoppingCarts]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    createOrder({ ...formData, order: shoppingCarts }).then((data) => {\r\n      alert(data.data.message);\r\n    });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Label htmlFor=\"name\">Name:</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n          pattern=\"[A-ZА-ЯЁҐІЇЄ][a-zA-Zа-яёґіїє]{1,}\" // Оновлений регулярний вираз\r\n          title=\"Please enter at least 2 characters with the first one in uppercase\" // Повідомлення про помилку\r\n        />\r\n\r\n        <Label htmlFor=\"email\">Email:</Label>\r\n        <Input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <Label htmlFor=\"phone\">Phone:</Label>\r\n        <Input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          name=\"phone\"\r\n          value={formData.phone}\r\n          onChange={handleChange}\r\n          required\r\n          pattern=\"[0-9]{10}\"\r\n          title=\"Please enter a 10-digit phone number\"\r\n        />\r\n\r\n        <Label htmlFor=\"address\">Address:</Label>\r\n        <Input\r\n          id=\"address\"\r\n          name=\"address\"\r\n          value={formData.address}\r\n          onChange={handleChange}\r\n          required\r\n        ></Input>\r\n\r\n        <Box>\r\n          <Button type=\"submit\">Submit</Button>\r\n          <Span>Total price: {totalPrice}</Span>\r\n        </Box>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ShoppingForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Item = styled.li`\r\n  border: 1px solid lightgray;\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\nexport const Box = styled.div`\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n`;\r\nexport const Img = styled.img`\r\n  height: 250px;\r\n`;\r\nexport const Title = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nexport const Price = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: 1px solid LIGHTGRAY;\r\n`;\r\nexport const Button = styled.button`\r\n  width: 100px;\r\n  padding: 8px;\r\n  border: 1px solid lightgray;\r\n  border-radius: 5px;\r\n  color: #000;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  &:hover {\r\n    background-color: #2196f3;\r\n    color: #fff;\r\n    border: transparent;\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Img,\r\n  Input,\r\n  Item,\r\n  Price,\r\n  Title,\r\n} from \"./ShoppingCartItem.styled\";\r\n\r\nconst ShoppingCartItem = ({\r\n  avatar,\r\n  title,\r\n  price,\r\n  id,\r\n  setShoppingCart,\r\n  shoppingCarts,\r\n}) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const storedCarts = JSON.parse(localStorage.getItem(\"shoppingCarts\"));\r\n    if (storedCarts) {\r\n      const storedQuantity = storedCarts.find((cart) => cart.id === id)?.count;\r\n      if (storedQuantity) {\r\n        setQuantity(storedQuantity);\r\n      }\r\n    }\r\n  }, [id]);\r\n\r\n  const handleQuantityChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value);\r\n    if (!isNaN(newQuantity) && newQuantity > 0) {\r\n      const updatedCarts = shoppingCarts.map((cart) => {\r\n        if (cart.id === id) {\r\n          return { ...cart, count: newQuantity };\r\n        } else {\r\n          return cart;\r\n        }\r\n      });\r\n      setShoppingCart(updatedCarts);\r\n      setQuantity(newQuantity);\r\n    }\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    const removedData = shoppingCarts.filter((el) => el.id !== +id);\r\n    setShoppingCart(removedData);\r\n  };\r\n\r\n  return (\r\n    <Item>\r\n      <Img src={avatar} alt=\"medicament\" />\r\n      <Box>\r\n        <Title>{title}</Title>\r\n        <Price>Price: {price}</Price>\r\n        <Input\r\n          type=\"number\"\r\n          value={quantity}\r\n          onChange={handleQuantityChange}\r\n          min=\"1\"\r\n        />\r\n        <Button type=\"button\" onClick={handleRemove}>\r\n          Remove\r\n        </Button>\r\n      </Box>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartItem;\r\n","import ShoppingCartItem from \"./ShoppingCartItem\";\r\n\r\nconst ShoppingItem = ({ shoppingCarts, setShoppingCart }) => {\r\n  return (\r\n    <>\r\n      {shoppingCarts?.length > 0 &&\r\n        shoppingCarts.map(({ avatar, title, price, id }) => (\r\n          <ShoppingCartItem\r\n            key={id}\r\n            avatar={avatar}\r\n            title={title}\r\n            price={price}\r\n            id={id}\r\n            setShoppingCart={setShoppingCart}\r\n            shoppingCarts={shoppingCarts}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShoppingItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 300px);\r\n  gap: 20px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport ShoppingItem from \"../ShoppingItem/ShoppingItem\";\r\nimport { ShoppingCartContext } from \"../../utility/context\";\r\nimport { List } from \"./ShoppingList.styled\";\r\n\r\nconst ShoppingList = () => {\r\n  const { shoppingCarts, setShoppingCart } = useContext(ShoppingCartContext);\r\n\r\n  return (\r\n    <List>\r\n      <ShoppingItem\r\n        shoppingCarts={shoppingCarts}\r\n        setShoppingCart={setShoppingCart}\r\n      />\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\nexport const Box = styled.div`\r\n  height: 81.3vh;\r\n  position: sticky;\r\n  overflow-y: auto;\r\n  width: 60vw;\r\n`;\r\n","import ShoppingForm from \"../components/ShoppingForm\";\r\nimport ShoppingList from \"../components/ShoppingList\";\r\nimport { Box, Section } from \"./ShoppingCartPage.styled\";\r\n\r\nconst ShoppingCartPage = () => {\r\n  return (\r\n    <Section>\r\n      <ShoppingForm />\r\n      <Box>\r\n        <ShoppingList />\r\n      </Box>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartPage;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","Box","_templateObject5","Button","button","_templateObject6","Span","span","_templateObject7","ShoppingForm","formData","setFormData","useState","name","email","phone","address","shoppingCarts","useContext","ShoppingCartContext","totalPrice","setTotalPrice","useEffect","total","reduce","acc","item","price","count","handleChange","e","target","value","_jsx","children","_jsxs","onSubmit","preventDefault","createOrder","order","then","data","alert","message","htmlFor","type","id","onChange","required","pattern","title","Item","li","Img","img","Title","h3","Price","_ref","avatar","setShoppingCart","quantity","setQuantity","storedCarts","JSON","parse","localStorage","getItem","_storedCarts$find","storedQuantity","find","cart","src","alt","newQuantity","parseInt","isNaN","updatedCarts","map","min","onClick","handleRemove","removedData","filter","el","_Fragment","length","_ref2","ShoppingCartItem","List","ul","ShoppingList","ShoppingItem","Section","section","ShoppingCartPage"],"sourceRoot":""}